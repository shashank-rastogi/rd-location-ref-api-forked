# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  containerRegistryServiceConnection: rd-location-ref-api-forked
  imageRepository: srast1406/rd-location-ref-api-forked
  tag: 1.0.0
  
steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- task: Docker@2
    displayName: dockerLogin
    inputs:
      command: login
      containerRegistry: $(containerRegistryServiceConnection)
- task: Docker@2
    displayName: dockerBuild
    inputs:
      repository: $(imageRepository)
      command: build
      Dockerfile: Dockerfile
      tags: |
        $(tag)
- task: Docker@2
    displayName: dockerPush
    inputs:
      command: push
      containerRegistry: $(containerRegistryServiceConnection)
      repository: $(imageRepository)
      tags: |
        $(tag)
